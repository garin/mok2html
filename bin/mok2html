#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
# Copyright (C) garin <garin54@gmail.com> 2011-2013
# See the included file COPYING for details.
$:.unshift File.join(File.dirname(__FILE__), "../lib")
require "yaml"
require "optparse"
require "mok2html"

# デフォルト設定値
options = {
  :config              => "~/.mok/config.yaml",
  :css                 => "",
  :javascript          => "",
  :reference_extension => ".html",
  :reference_directory => "",
  :partial_directory   => "",
  :media_directory     => "",
  :variable            => "",
  :language            => "ja",
  :index               => true,
  :quiet               => false,
  :custom_element      => "" ,
}
options_default = options

# 使い方
def usage(opt)
  puts opt.help
  exit 0
end

# 設定ファイルの読み込み
def set_config_by_file(file, options)
  file_path = File.expand_path(file)
  return options unless  File.file?(file_path)
  config = YAML.load_file( file_path )
  if config
    options.each do |key,val|
      options[key.to_sym] = config[key.to_s] unless config[key.to_s].nil?
    end
  end
  options
end

# 設定内容の表示
def show_config(options)
  options.each do |key, val|
    next if key == :show_config or key == :src_file
    puts "#{key.to_s.ljust(20)}: #{Array(val).join(',')}"
  end
  exit 0
end

# mok-parser のバージョンを表示
def mok_parser_version
  "mok-parser #{Mok::VERSION} (#{Mok::RELEASE})"
end


# 設定ファイル
options = set_config_by_file(options[:config], options) unless ARGV.find {|val| val == "--no-config"}

# コマンドラインオプション
opt = OptionParser.new do |opt|
  opt.version = Mok::Mok2Html::VERSION
  opt.release = Mok::Mok2Html::RELEASE
  opt.on("-c", "--css file[,file,..]", "HTMLに埋め込むスタイルシートを指定(デフォルト:なし)") {|f| options[:css] = f}
  opt.on("-j", "--javascript file[,file,..]", "HTMLに埋め込むJavaScriptを指定(デフォルト:なし)") {|f| options[:javascript] = f}
  opt.on("-l", "--language LANG", "言語(デフォルト:#{options[:language]} 。ドキュメント側で指定した場合はそちらを優先)"){|l| options[:language] = l}
  opt.on("--no-config", "設定ファイル(#{options[:config]})を使用しない"){|v| options[:config] = v }
  opt.on("--variable file", "ドキュメント内変数((@..@))の外部定義ファイル(デフォルト:なし)"){|v| options[:variable] = v }
  opt.on("--[no-]index", "目次を生成する/しない(デフォルト:する)"){|v| options[:index] = v }
  opt.on("--[no-]metadata", "メタ情報を出力する/しない(デフォルト:する)"){|v| options[:metadata] = v }
  opt.on("-q","--quiet", "ヘッダやフッタを除いた本文のみを出力する(デフォルト:しない)"){ options[:quiet] = true }
  opt.on("-e","--reference_extension string", "リファレンス修飾((<..>)で最後の「.%」を置換する拡張子(デフォルト:.html)"){|s| options[:reference_extension] = s }
  opt.on("-R", "--reference_directory directory", "リンク修飾((<..>))のファイルを配置するディレクトリ(デフォルト:なし)"){|d| options[:media_directory] = d }
  opt.on("-M", "--media_directory directory", "メディア修飾(($..$))で画像や動画などのファイルを配置するディレクトリ(デフォルト:なし)"){|d| options[:media_directory] = d }
  opt.on("-P", "--partial_directory directory", "部分テンプレート(partial)記法((!..!))のファイルを配置するディレクトリ(デフォルト:変換元ファイルのカレントディレクトリ)"){|d| options[:partial_directory] = d }
  opt.on("--custom_element file", "HTMLタグをカスタマイズするためのRubyファイル)"){|f| options[:custom_element] = f }
  opt.on("-s","--show-config", "現在の設定値を表示"){|flg| options[:show_config] = true }
  opt.on("-S","--show-config-default", "mok2htmlのデフォルト設定値を表示"){ show_config options_default }
  opt.on("-v","--version", "mok2htmlのバージョンを表示"){ puts opt.ver ; exit 0 }
  opt.on("-V","--parser-version", "使用する mok-parser のバージョンを表示"){ puts mok_perser_version ; exit 0 }
  opt.banner = <<EOL
#{opt.ver}

== Usage
$ mok2html [options] file

== Description
"mok2html" is mok document to HTML converter.
Read more: https://github.com/garin/mok2html

== Parser
#{mok_parser_version}

== Options
EOL
end
opt.parse!(ARGV)

# main
options[:src_file] = ARGV[0]
show_config(options) if options[:show_config] # 設定内容の表示
usage(opt) unless ARGV[0]
src = File.open(ARGV[0],"r").readlines
mok = Mok::Mok2Html.new(src, options)
puts mok.to_html
