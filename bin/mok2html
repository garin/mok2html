#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
# Copyright (C) garin <garin54@gmail.com> 2011-2013
# See the included file COPYING for details.
$:.unshift File.join(File.dirname(__FILE__), "../lib")
require "yaml"
require "optparse"
require "mok2html"

# デフォルトの設定値
options = {:css => "", :js => "", :reference_extension => '.html', :reference_base_directory => "", :media_base_directory => "", :custom_element => "" , :language => 'ja', :config => '~/.mok2html.yaml', :index => true, :quiet => false}

# 使い方
def usage(opt)
  puts opt.help
  exit 0
end

def set_config_by_file(file, options)
  file_path = File.expand_path(file)
  return options unless  File.exist?(file_path)
  config = YAML.load_file( file_path )
  if config
    options.each do |key,val|
      options[key.to_sym] = config[key.to_s] unless config[key.to_s].nil?
    end
  end
  options
end

# コマンドラインオプション
opt = OptionParser.new do |opt|
  opt.banner = "Usage: mok2html [options] file"
  opt.version = Mok::Mok2Html::VERSION
  opt.release = Mok::Mok2Html::RELEASE
  opt.on("-c", "--css file[,file,..]", "HTMLに埋め込むスタイルシートを指定") {|f| options[:css] = f}
  opt.on("-j", "--javascript file[,file,..]", "HTMLに埋め込むJavaScriptを指定") {|f| options[:js] = f}
  opt.on("-L", "--language LANG", "言語(デフォルトは #{options[:language]} 。ドキュメント側で指定されていればそちらを優先)"){|l| options[:language] = l}
  opt.on("--[no-]config [file]", "設定ファイルを指定、または設定ファイルを使用しない(デフォルト:~/.mok2html)"){|v| options[:config] = v }
  opt.on("--[no-]index", "目次を生成する(デフォルトは生成する)"){|v| options[:index] = v }
  opt.on("--[no-]metadata", "メタ情報を出力しない(デフォルトは出力する)"){|v| options[:metadata] = v }
  opt.on("-q","--quiet", "本文だけを出力する(ヘッダやフッタは出力しない)"){ options[:quiet] = true }
  opt.on("-s","--reference_extension string", "リファレンス記法で「.%」を置換する拡張子(デフォルト .html)"){|s| options[:reference_extension] = s }
  opt.on("-R", "--reference_base_directory directory", "リンク記法((<..>))のファイルを配置する基底ディレクトリ(デフォルト:なし)"){|d| options[:media_base_directory] = d }
  opt.on("-M", "--media_base_directory directory", "画像や動画などのメディア記法(($..$))のファイルを配置する基底ディレクトリ(デフォルト:なし)"){|d| options[:media_base_directory] = d }
  opt.on("--custom_element file", "HTMLタグをカスタマイズするためのRubyファイル)"){|f| options[:custom_element] = f }
  opt.on("-V","--parser-version", "使用する mok-parser のバージョンを表示"){
    puts "mok-parser: #{Mok::VERSION} (#{Mok::RELEASE})"
    exit 0
  }
end
opt.parse!(ARGV)

usage(opt) unless ARGV[0]

# config file
options = set_config_by_file(options[:config], options) if options[:config]

# main
src = File.open(ARGV[0],"r").readlines
mok = Mok::Mok2Html.new(src, options)
puts mok.to_html
